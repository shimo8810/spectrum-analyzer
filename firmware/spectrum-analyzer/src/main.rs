#![no_std]
#![no_main]

use attiny_hal as hal;
use panic_halt as _;

use spectrum_analyzer::delay::delay_ms;
use spectrum_analyzer::led_matrix::LedMatrix;

#[hal::entry]
fn main() -> ! {
    let dp = hal::Peripherals::take().unwrap();
    let pins: hal::Pins = hal::pins!(dp);

    let mut display = LedMatrix::new(
        pins.pb0.into_output(),
        pins.pb1.into_output(),
        pins.pb2.into_output(),
    );

    let data = [
        0b00000000_10000011_10000011_00101111,
        0b00000000_10000011_10000011_00011111,
        0b00000000_10000011_10000111_00001111,
        0b00000000_10000011_10010011_00001111,
        0b00000000_10000011_11000011_00001111,
        0b00000000_10001011_10000011_00001111,
        0b00000000_11000011_10000011_00001111,
        0b00000000_10000011_10000011_01001111,
        0b00000000_10000011_10000011_10001111,
        0b00000000_10000011_10001011_00001111,
        0b00000000_10000011_10100011_00001111,
        0b00000000_10000111_10000011_00001111,
        0b00000000_10010011_10000011_00001111,
        0b00000000_10100011_10000011_00001111,
    ];

    let data = [
        0b00000000_10000011_10000011_00101111, // L1
        0b00000000_00000001_00000011_00010001, // L2
        0b00000000_10000011_10000111_00001111, // L3
        0b00000000_00000000_00000000_00000000, // L4
        0b00000000_10000011_11000011_00001111, // L5
        0b00000000_00001000_00000000_00000001, // L6
        0b00000000_11000011_10000011_00001111, // L7
        0b00000000_10000011_10000011_01001111, // R1
        0b00000000_00000001_00000011_10000001, // R2
        0b00000000_10000011_10001011_00001111, // R3
        0b00000000_00000000_00000000_00000000, // R4
        0b00000000_00000100_00000000_00000001, // R5
        0b00000000_00010000_00000000_00000001, // R6
        0b00000000_10100011_10000011_00001111, // R7
    ];
    let data2 = [
        0b00000000_10000011_10000011_00101111, // L1
        0b00000000_00000001_00000011_00010011, // L2
        0b00000000_10000011_10000111_00001111, // L3
        0b00000000_00000000_00000000_00000000, // L4
        0b00000000_10000011_11000011_00001111, // L5
        0b00000000_10001011_10000011_00001111, // L6
        0b00000000_11000011_10000011_00001111, // L7
        0b00000000_10000011_10000011_01001111, // R1
        0b00000000_00000001_00000011_10000011, // R2
        0b00000000_10000011_10001011_00001111, // R3
        0b00000000_00000000_00000000_00000000, // R4
        0b00000000_10000111_10000011_00001111, // R5
        0b00000000_10010011_10000011_00001111, // R6
        0b00000000_10100011_10000011_00001111, // R7
    ];
    // led.update_shift_register(0);
    delay_ms(500);

    // let matrix = [[false; 7]; 20];

    loop {
        for _ in 0..100 {
            for &d in &data {
                display.update_shift_register(d);
                delay_ms(5);
            }
        }
        for _ in 0..100 {
            for &d in &data2 {
                display.update_shift_register(d);
                delay_ms(5);
            }
        }
    }
}
